---
- name: "This Is A Play To Fetch From CyberArk"
  hosts: "csc2cxp21113105.cloud.kp.org"       #  "csc2cxp00004535.cloud.kp.org"
  gather_facts: true
  vars:
    cyberark_base_url: 'papmapi-prod.appl.kp.org'
    cyberark_app_id: 'API_APP_I_22022_IBMDynamicAu_ALL'
    cyberark_safe: 'APP_I_22022_IBMDynamicAu_ALL'
    client_key_path: '/users/kphanat1/client.key'
    client_cert_path: '/users/kphanat1/client.pem'
    who_run: "{{ tower_user_name.split('@') }}"
  tasks:
    - name: "First - Fetching Cred Details From AAP For :- {{ os_credential_to_update }}"   # noqa  name[template]
      ansible.builtin.uri:
        url: "{{ lookup('env', 'TOWER_HOST') }}/api/v2/credentials/?name={{ os_credential_to_update }}"
        method: GET
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ lookup('env', 'TOWER_OAUTH_TOKEN') }}"
        validate_certs: false
        return_content: true
        force_basic_auth: false
        status_code:
          - 201
          - 200
      register: getcred
      delegate_to: localhost
      no_log: false
      become: false


    - name: "Second - Extract 'my_username / my_password / my_description / my_host' Var From Cred '{{ os_credential_to_update }}' - AAP" # noqa  name[template]
      ansible.builtin.set_fact:
        my_username: "{{ getcred.json.results[0].inputs.username }}"
        my_description: "{%if getcred.json.results[0].inputs.description is defined %}{{ getcred.json.results[0].description }}{%else %}{%endif %}"
        my_password: "{%if getcred.json.results[0].inputs.password is defined %}{{ getcred.json.results[0].inputs.password }}{%else %}{%endif %}"
        my_host: "{%if getcred.json.results[0].inputs.host is defined %}{{ getcred.json.results[0].inputs.host }}{%else %}{%endif %}"
        my_ssh_key_data: "{%if getcred.json.results[0].inputs.ssh_key_data is defined %}{{ getcred.json.results[0].inputs.ssh_key_data }}{%else %}{%endif %}"


    - name: "Third - CyberArk Get Cred for '{{ my_username }}' - PAPM"  # noqa name[template]
      ansible.builtin.uri:
        url: "https://{{ cyberark_base_url }}/AIMWebService/api/Accounts?AppID={{ cyberark_app_id }}&Safe={{ cyberark_safe }}&username={{ my_username }}"
        method: GET
        client_cert: "{{ client_cert_path }}"
        client_key: "{{ client_key_path }}"
        body: '{}'
        body_format: json
        validate_certs: true
        headers:
          Content-Type: "application/json"
      register: my_credential


    - name: "Fourth - Extract 'my_password' Var For Username :- '{{ my_username }}' - PAPM" # noqa name[template]
      ansible.builtin.set_fact:
        my_password: "{{ my_credential.json.Content }}"
