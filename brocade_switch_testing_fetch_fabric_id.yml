---
- name: "Playbook For Brocade Fabric Side Zoning Activity For SWITCH - A"
  hosts: "csc2cxn00002917.cloud.kp.org"
  gather_facts: false
  collections:
    - brocade.fos
  tasks:
    - name: "Task Loading To Fetch Fabric Id's Corrosponding To Slot-Port Details Of Build Server"
      block:
        - name: "Get BaseNetworkAdapters Count Using ILO Of Build Server"
          ansible.builtin.uri:
            url: "https://{{ server_ilo_address }}/redfish/v1/Systems/1/BaseNetworkAdapters/"
            method: GET
            user: '{{ ansible_user }}'
            password: '{{ ansible_password }}'
            force_basic_auth: true
            validate_certs: false
          register: base_adapter_info



        - name: "Get Base Network Adapters Count On Build Server"
          ansible.builtin.set_fact:
            base_network_adapter_count: "{{ base_adapter_info.json['Members@odata.count'] }}"
            # https://10.16.50.85/redfish/v1/Systems/1/BaseNetworkAdapters/1
            # https://10.16.50.85/redfish/v1/Systems/1/BaseNetworkAdapters/2
            # https://10.16.50.85/redfish/v1/Systems/1/BaseNetworkAdapters/3


        - name: "Get Full Details For All Base Network Adapters On Build Server"
          ansible.builtin.uri:
            url: "https://{{ server_ilo_address }}/redfish/v1/Systems/1/BaseNetworkAdapters/{{ item }}"
            method: GET
            user: '{{ ansible_user }}'
            password: '{{ ansible_password }}'
            force_basic_auth: true
            validate_certs: false
          register: network_adapters
          with_sequence: start=1 end={{ base_network_adapter_count }}


        - name: "Print 'network_adapters'"
          ansible.builtin.debug:
            msg: "{{ network_adapters.results }}"


        - name: "Filter FCPort List And Respective Slot Number[EMC ONLY] From List Of Adapters Output"
          ansible.builtin.set_fact:
            my_slot_and_port_details: "{{ my_slot_and_port_details | default([]) + [{'slot_number': (item.json.Location | regex_search('Slot (\\d+)')).split(' ')[-1], 'fc_port': item.json.FcPorts}] }}"
          when: item.json.FcPorts != []
          loop: "{{ network_adapters.results }}"


        - name: "Display 'my_slot_and_port_details'"
          ansible.builtin.debug:
            msg: "{{ my_slot_and_port_details }}"


        - name: "Get FOS User Name And Password From Cred"
          ansible.builtin.set_fact:
            fos_user_name: "{{ lookup('env', 'ANSIBLE_NET_USERNAME') }}"    # change accordingly
            fos_password: "{{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}"     # change accordingly
          no_log: true


        - name: "Add '{{ switch_a_ip_address }}' To Dynamic Inventory"
          # no_log: true
          ansible.builtin.add_host:
            name: "my_switch_a"
            groups: "kp2_grp_sshproxy_2hop_1"
            ansible_user: "{{ fos_user_name }}"
            ansible_password: "{{ fos_password }}"
            ansible_host: "{{ switch_a_ip_address }}"
            devicetype: switch
            fqdn: "my_switch_a"
            ipaddress: "{{ switch_a_ip_address }}"
            networkostype: brocade.fos
            tier: nonproduction


        - name: "Create 'my_credential' Var Which Is Having Switch Login Details"
          ansible.builtin.set_fact:
            my_credential: "{{ my_credential | default({}) | combine({ 'fos_ip_addr': switch_a_ip_address, 'fos_user_name': fos_user_name, 'fos_password':fos_password, 'https': 'self','ssh_hostkeymust': false }) }}"
          no_log: true


        - name: "Gather facts for brocade_fibrechannel_switch_fibrechannel_switch"
          become: true
          become_user: "{{ fos_user_name }}"
          delegate_to: "my_switch_a"
          ansible.builtin.raw: 'lscfg --show'
          register: lscfg_show_output
          changed_when: lscfg_show_output.rc == 0


        - name: "Print List of Logical Fabric ID's"
          ansible.builtin.debug:
            msg: "{{ lscfg_show_output }}"


        - name: "Gather facts for brocade_fibrechannel_switch_fibrechannel_switch"
          brocade.fos.brocade_list_obj_facts:
            credential: "{{ my_credential }}"
            vfid: -1
            module_name: "brocade_fibrechannel_logical_switch"
            list_name: "fibrechannel_logical_switch"
          register: switch_data


        - name: "Fetch List of Logical Fabric ID's Available On {{ switch_a_ip_address }}"
          ansible.builtin.set_fact:
           logical_fabric_ids: "{{ logical_fabric_ids | default([]) + [ item.fabric_id] }}"
          loop: "{{ switch_data.ansible_facts.fibrechannel_logical_switch }}"


        - name: "Print List of Logical Fabric ID's"
          ansible.builtin.debug:
            msg: "{{ logical_fabric_ids }}"


# {
#   "ansible_facts": {
#     "logical_fabric_ids": [
#       "128"
#     ]
#   },
#   "_ansible_no_log": null,
#   "changed": false,
#   "item": {
#     "fabric_id": "128",
#     "base_switch_enabled": "0",
#     "switch_wwn": "10:00:d8:1f:cc:c0:d9:68",
#     "default_switch_status": "1",
#     "default_switch": true,
#     "logical_isl_enabled": "1",
#     "ficon_mode_enabled": "0",
#     "port_member_list": {
#       "port_member": [
#         "0/0",
#         "0/1",
#         "0/2",
#         "0/3",
#         "0/4",
#         "0/5",
#         "0/6",
#         "0/7",
#         "0/8",
#         "0/9",
#         "0/10",
#         "0/11",
#         "0/12",
#         "0/13",
#         "0/14",
#         "0/15",
#         "0/16",
#         "0/17",
#         "0/18",
#         "0/19",
#         "0/20",
#         "0/21",
#         "0/22",
#         "0/23",
#         "0/24",
#         "0/25",
#         "0/26",
#         "0/27",
#         "0/28",
#         "0/29",
#         "0/30",
#         "0/31",
#         "0/32",
#         "0/33",
#         "0/34",
#         "0/35",
#         "0/36",
#         "0/37",
#         "0/38",
#         "0/39",
#         "0/40",
#         "0/41",
#         "0/42",
#         "0/43",
#         "0/44",
#         "0/45",
#         "0/46",
#         "0/47",
#         "0/48",
#         "0/49",
#         "0/50",
#         "0/51",
#         "0/52",
#         "0/53",
#         "0/54",
#         "0/55",
#         "0/56",
#         "0/57",
#         "0/58",
#         "0/59",
#         "0/60",
#         "0/61",
#         "0/62",
#         "0/63"
#       ]
#     },
#     "ge_port_member_list": null,
#     "port_index_members": {
#       "port_index": [
#         "0",
#         "1",
#         "2",
#         "3",
#         "4",
#         "5",
#         "6",
#         "7",
#         "8",
#         "9",
#         "10",
#         "11",
#         "12",
#         "13",
#         "14",
#         "15",
#         "16",
#         "17",
#         "18",
#         "19",
#         "20",
#         "21",
#         "22",
#         "23",
#         "24",
#         "25",
#         "26",
#         "27",
#         "28",
#         "29",
#         "30",
#         "31",
#         "32",
#         "33",
#         "34",
#         "35",
#         "36",
#         "37",
#         "38",
#         "39",
#         "40",
#         "41",
#         "42",
#         "43",
#         "44",
#         "45",
#         "46",
#         "47",
#         "48",
#         "49",
#         "50",
#         "51",
#         "52",
#         "53",
#         "54",
#         "55",
#         "56",
#         "57",
#         "58",
#         "59",
#         "60",
#         "61",
#         "62",
#         "63"
#       ]
#     }
#   },
#   "ansible_loop_var": "item",
#   "_ansible_item_label": {
#     "fabric_id": "128",
#     "base_switch_enabled": "0",
#     "switch_wwn": "10:00:d8:1f:cc:c0:d9:68",
#     "default_switch_status": "1",
#     "default_switch": true,
#     "logical_isl_enabled": "1",
#     "ficon_mode_enabled": "0",
#     "port_member_list": {
#       "port_member": [
#         "0/0",
#         "0/1",
#         "0/2",
#         "0/3",
#         "0/4",
#         "0/5",
#         "0/6",
#         "0/7",
#         "0/8",
#         "0/9",
#         "0/10",
#         "0/11",
#         "0/12",
#         "0/13",
#         "0/14",
#         "0/15",
#         "0/16",
#         "0/17",
#         "0/18",
#         "0/19",
#         "0/20",
#         "0/21",
#         "0/22",
#         "0/23",
#         "0/24",
#         "0/25",
#         "0/26",
#         "0/27",
#         "0/28",
#         "0/29",
#         "0/30",
#         "0/31",
#         "0/32",
#         "0/33",
#         "0/34",
#         "0/35",
#         "0/36",
#         "0/37",
#         "0/38",
#         "0/39",
#         "0/40",
#         "0/41",
#         "0/42",
#         "0/43",
#         "0/44",
#         "0/45",
#         "0/46",
#         "0/47",
#         "0/48",
#         "0/49",
#         "0/50",
#         "0/51",
#         "0/52",
#         "0/53",
#         "0/54",
#         "0/55",
#         "0/56",
#         "0/57",
#         "0/58",
#         "0/59",
#         "0/60",
#         "0/61",
#         "0/62",
#         "0/63"
#       ]
#     },
#     "ge_port_member_list": null,
#     "port_index_members": {
#       "port_index": [
#         "0",
#         "1",
#         "2",
#         "3",
#         "4",
#         "5",
#         "6",
#         "7",
#         "8",
#         "9",
#         "10",
#         "11",
#         "12",
#         "13",
#         "14",
#         "15",
#         "16",
#         "17",
#         "18",
#         "19",
#         "20",
#         "21",
#         "22",
#         "23",
#         "24",
#         "25",
#         "26",
#         "27",
#         "28",
#         "29",
#         "30",
#         "31",
#         "32",
#         "33",
#         "34",
#         "35",
#         "36",
#         "37",
#         "38",
#         "39",
#         "40",
#         "41",
#         "42",
#         "43",
#         "44",
#         "45",
#         "46",
#         "47",
#         "48",
#         "49",
#         "50",
#         "51",
#         "52",
#         "53",
#         "54",
#         "55",
#         "56",
#         "57",
#         "58",
#         "59",
#         "60",
#         "61",
#         "62",
#         "63"
#       ]
#     }
#   }
# }
